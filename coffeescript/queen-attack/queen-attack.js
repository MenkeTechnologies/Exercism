// Generated by CoffeeScript 2.7.0
(function() {
  var QueenAttack;

  QueenAttack = class QueenAttack {
    constructor(positions) {
      this.white = positions && positions['white'] || [0, 3];
      this.black = positions && positions['black'] || [7, 3];
      if (this.white[0] === this.black[0] && this.white[1] === this.black[1]) {
        throw "Queens cannot share the same space";
      }
    }

    toString() {
      var _, board, row;
      board = (function() {
        var i, results;
        results = [];
        for (_ = i = 0; i < 8; _ = ++i) {
          results.push((function() {
            var j, results1;
            results1 = [];
            for (_ = j = 0; j < 8; _ = ++j) {
              results1.push('_');
            }
            return results1;
          })());
        }
        return results;
      })();
      board[this.white[1]][this.white[0]] = 'W';
      board[this.black[1]][this.black[0]] = 'B';
      return ((function() {
        var i, len, results;
        results = [];
        for (i = 0, len = board.length; i < len; i++) {
          row = board[i];
          results.push(row.join(' '));
        }
        return results;
      })()).join('\n');
    }

    canAttack() {
      var dx, dy;
      dx = Math.abs(this.black[1] - this.white[1]);
      dy = Math.abs(this.black[0] - this.white[0]);
      return dx === dy || dx === 0 || dy === 0;
    }

  };

  module.exports = QueenAttack;

}).call(this);

//# sourceMappingURL=queen-attack.js.map
