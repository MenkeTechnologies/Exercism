structural type LinkedList a = Placeholder

LinkedList.new : a -> LinkedList a
LinkedList.new a = todo "You need to implement new."

LinkedList.cons : a -> LinkedList a -> LinkedList a
LinkedList.cons a ls = todo "You need to implement cons."

LinkedList.nil : LinkedList a
LinkedList.nil = todo "You need to implement nil."

LinkedList.fromList : [a] -> LinkedList a
LinkedList.fromList xs = todo "You need to implement fromList."

LinkedList.head : LinkedList a -> Optional a
LinkedList.head linkedList = todo "You need to implement head"

LinkedList.isNil : LinkedList a -> Boolean
LinkedList.isNil linkedList = todo "You need to implement isNil."

LinkedList.tail : LinkedList a -> LinkedList a
LinkedList.tail linkedList = todo "You need to implement tail."

LinkedList.reverseLinkedList : LinkedList a -> LinkedList a
LinkedList.reverseLinkedList linkedList = todo "You need to implement reverseLinkedList."

LinkedList.toList : LinkedList a -> [a]
LinkedList.toList linkedList = todo "You need to implement toList."
