%% Generated with 'testgen v0.2.0'
%% Revision 1 of the exercises generator was used
%% https://github.com/exercism/problem-specifications/raw/426b93d05abb69f6a7b5d84b61ba4b6fcd1e6385/exercises/grains/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(grains_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_square_grains_on_square_1_test_'() ->
    {"Square grains on square 1",
     ?_assertMatch(1, grains:square(1))}.

'2_square_grains_on_square_2_test_'() ->
    {"Square grains on square 2",
     ?_assertMatch(2, grains:square(2))}.

'3_square_grains_on_square_3_test_'() ->
    {"Square grains on square 3",
     ?_assertMatch(4, grains:square(3))}.

'4_square_grains_on_square_4_test_'() ->
    {"Square grains on square 4",
     ?_assertMatch(8, grains:square(4))}.

'5_square_grains_on_square_16_test_'() ->
    {"Square grains on square 16",
     ?_assertMatch(32768, grains:square(16))}.

'6_square_grains_on_square_32_test_'() ->
    {"Square grains on square 32",
     ?_assertMatch(2147483648, grains:square(32))}.

'7_square_grains_on_square_64_test_'() ->
    {"Square grains on square 64",
     ?_assertMatch(9223372036854775808, grains:square(64))}.

'8_square_0_raises_an_exception_test_'() ->
    {"square 0 raises an exception",
     ?_assertMatch({error,
		    "square must be between 1 and 64"},
		   grains:square(0))}.

'9_negative_square_raises_an_exception_test_'() ->
    {"negative square raises an exception",
     ?_assertMatch({error,
		    "square must be between 1 and 64"},
		   grains:square(-1))}.

'10_square_greater_than_64_raises_an_exception_test_'() ->
    {"square greater than 64 raises an exception",
     ?_assertMatch({error,
		    "square must be between 1 and 64"},
		   grains:square(65))}.

'11_returns_the_total_number_of_grains_on_the_board_test_'() ->
    {"returns the total number of grains on "
     "the board",
     ?_assertMatch(18446744073709551615, grains:total())}.
