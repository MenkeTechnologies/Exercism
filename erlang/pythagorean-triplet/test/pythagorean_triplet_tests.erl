%% Generated with 'testgen v0.2.0'
%% Revision 1 of the exercises generator was used
%% https://github.com/exercism/problem-specifications/raw/42dd0cea20498fd544b152c4e2c0a419bb7e266a/exercises/pythagorean-triplet/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(pythagorean_triplet_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_triplets_whose_sum_is_12_test_'() ->
    {"triplets whose sum is 12",
     ?_assertEqual([{3, 4, 5}],
		   lists:sort(pythagorean_triplet:triplets_with_sum(12)))}.

'2_triplets_whose_sum_is_108_test_'() ->
    {"triplets whose sum is 108",
     ?_assertEqual([{27, 36, 45}],
		   lists:sort(pythagorean_triplet:triplets_with_sum(108)))}.

'3_triplets_whose_sum_is_1000_test_'() ->
    {"triplets whose sum is 1000",
     ?_assertEqual([{200, 375, 425}],
		   lists:sort(pythagorean_triplet:triplets_with_sum(1000)))}.

'4_no_matching_triplets_for_1001_test_'() ->
    {"no matching triplets for 1001",
     ?_assertEqual([],
		   lists:sort(pythagorean_triplet:triplets_with_sum(1001)))}.

'5_returns_all_matching_triplets_test_'() ->
    {"returns all matching triplets",
     ?_assertEqual([{9, 40, 41}, {15, 36, 39}],
		   lists:sort(pythagorean_triplet:triplets_with_sum(90)))}.

'6_several_matching_triplets_test_'() ->
    {"several matching triplets",
     ?_assertEqual([{40, 399, 401}, {56, 390, 394},
		    {105, 360, 375}, {120, 350, 370}, {140, 336, 364},
		    {168, 315, 357}, {210, 280, 350}, {240, 252, 348}],
		   lists:sort(pythagorean_triplet:triplets_with_sum(840)))}.

'7_triplets_for_large_number_test_'() ->
    {"triplets for large number",
     ?_assertEqual([{1200, 14375, 14425},
		    {1875, 14000, 14125}, {5000, 12000, 13000},
		    {6000, 11250, 12750}, {7500, 10000, 12500}],
		   lists:sort(pythagorean_triplet:triplets_with_sum(30000)))}.
