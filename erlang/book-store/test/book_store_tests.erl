%% Generated with 'testgen v0.2.0'
%% Revision 1 of the exercises generator was used
%% https://github.com/exercism/problem-specifications/raw/42dd0cea20498fd544b152c4e2c0a419bb7e266a/exercises/book-store/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(book_store_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_only_a_single_book_test_'() ->
    {"Only a single book",
     ?_assertEqual(800, book_store:total([1]))}.

'2_two_of_the_same_book_test_'() ->
    {"Two of the same book",
     ?_assertEqual(1600, book_store:total([2, 2]))}.

'3_empty_basket_test_'() ->
    {"Empty basket",
     ?_assertEqual(0, book_store:total([]))}.

'4_two_different_books_test_'() ->
    {"Two different books",
     ?_assertEqual(1520, book_store:total([1, 2]))}.

'5_three_different_books_test_'() ->
    {"Three different books",
     ?_assertEqual(2160, book_store:total([1, 2, 3]))}.

'6_four_different_books_test_'() ->
    {"Four different books",
     ?_assertEqual(2560, book_store:total([1, 2, 3, 4]))}.

'7_five_different_books_test_'() ->
    {"Five different books",
     ?_assertEqual(3000, book_store:total([1, 2, 3, 4, 5]))}.

'8_two_groups_of_four_is_cheaper_than_group_of_five_plus_group_of_three_test_'() ->
    {"Two groups of four is cheaper than group "
     "of five plus group of three",
     ?_assertEqual(5120,
		   book_store:total([1, 1, 2, 2, 3, 3, 4, 5]))}.

'9_two_groups_of_four_is_cheaper_than_groups_of_five_and_three_test_'() ->
    {"Two groups of four is cheaper than groups "
     "of five and three",
     ?_assertEqual(5120,
		   book_store:total([1, 1, 2, 3, 4, 4, 5, 5]))}.

'10_group_of_four_plus_group_of_two_is_cheaper_than_two_groups_of_three_test_'() ->
    {"Group of four plus group of two is cheaper "
     "than two groups of three",
     ?_assertEqual(4080,
		   book_store:total([1, 1, 2, 2, 3, 4]))}.

'11_two_each_of_first_4_books_and_1_copy_each_of_rest_test_'() ->
    {"Two each of first 4 books and 1 copy "
     "each of rest",
     ?_assertEqual(5560,
		   book_store:total([1, 1, 2, 2, 3, 3, 4, 4, 5]))}.

'12_two_copies_of_each_book_test_'() ->
    {"Two copies of each book",
     ?_assertEqual(6000,
		   book_store:total([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))}.

'13_three_copies_of_first_book_and_2_each_of_remaining_test_'() ->
    {"Three copies of first book and 2 each "
     "of remaining",
     ?_assertEqual(6800,
		   book_store:total([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1]))}.

'14_three_each_of_first_2_books_and_2_each_of_remaining_books_test_'() ->
    {"Three each of first 2 books and 2 each "
     "of remaining books",
     ?_assertEqual(7520,
		   book_store:total([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 1,
				     2]))}.

'15_four_groups_of_four_are_cheaper_than_two_groups_each_of_five_and_three_test_'() ->
    {"Four groups of four are cheaper than "
     "two groups each of five and three",
     ?_assertEqual(10240,
		   book_store:total([1, 1, 2, 2, 3, 3, 4, 5, 1, 1, 2, 2, 3,
				     3, 4, 5]))}.
